[tool.poetry]
name = "ml2service"
version = "0.1.0"
description = ""
authors = ["zerlok <denergytro@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^1.9.1"
click = "^8.1.3"
fastapi = { version = "^0.79.0", optional = true }
uvicorn = { extras = ["standard"], version = "^0.18.2", optional = true }

[tool.poetry.group.dev.dependencies]
mypy = "^0.971"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
requests = "^2.28.1"
types-requests = "^2.28.10"

[tool.poetry.extras]
fastapi-uvicorn = ["fastapi", "uvicorn"]

[tool.poetry.scripts]
ml2service = "ml2service.cli:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# ---- mypy settings ----
[tool.mypy]
python_version = "3.9"

files = ["./src", "./tests"]

disallow_any_expr = true
disallow_any_explicit = true
disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_no_return = true
warn_unreachable = true

strict_equality = true
implicit_reexport = false

show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true

warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["uvicorn.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["ml2service.cli"]
disallow_any_expr = false
disallow_any_unimported = false

[[tool.mypy.overrides]]
module = ["ml2service.services.runners.fastapi.*"]
disallow_any_expr = false
disallow_any_unimported = false

[[tool.mypy.overrides]]
module = ["ml2service.models.loader"]
disallow_any_expr = false
disallow_any_explicit = false
disallow_any_unimported = false
warn_return_any = false

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_any_expr = false
disallow_any_explicit = false
disallow_any_unimported = false
warn_return_any = false

# ---- pytest settings ----
[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
]
markers = [
    "asyncio: test asyncio",
]
testpaths = ["./tests"]

[tool.coverage.run]
branch = true
omit = [
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abc.abstractmethod",
    "if __name__ == .__main__.:",
]
show_missing = true

[tool.coverage.html]
directory = "htmlcov/"
